<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper
	namespace="com.atguigu.atcrowdfunding.potal.dao.MemberMapper">
	<resultMap id="BaseResultMap"
		type="com.atguigu.atcrowdfunding.bean.Member">
		<id column="id" jdbcType="INTEGER" property="id" />
		<result column="loginacct" jdbcType="VARCHAR"
			property="loginacct" />
		<result column="userpswd" jdbcType="CHAR" property="userpswd" />
		<result column="username" jdbcType="VARCHAR"
			property="username" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="authstatus" jdbcType="CHAR"
			property="authstatus" />
		<result column="usertype" jdbcType="CHAR" property="usertype" />
		<result column="realname" jdbcType="VARCHAR"
			property="realname" />
		<result column="cardnum" jdbcType="VARCHAR" property="cardnum" />
		<result column="accttype" jdbcType="CHAR" property="accttype" />
	</resultMap>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from t_member
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<insert id="insert"
		parameterType="com.atguigu.atcrowdfunding.bean.Member">
		insert into t_member (id, loginacct, userpswd,
		username,
		email, authstatus,
		usertype, realname, cardnum,
		accttype)
		values
		(#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR},
		#{userpswd,jdbcType=CHAR},
		#{username,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR}, #{authstatus,jdbcType=CHAR},
		#{usertype,jdbcType=CHAR}, #{realname,jdbcType=VARCHAR},
		#{cardnum,jdbcType=VARCHAR},
		#{accttype,jdbcType=CHAR})
	</insert>
	<update id="updateByPrimaryKey"
		parameterType="com.atguigu.atcrowdfunding.bean.Member">
		update t_member
		set loginacct =
		#{loginacct,jdbcType=VARCHAR},
		userpswd = #{userpswd,jdbcType=CHAR},
		username = #{username,jdbcType=VARCHAR},
		email =
		#{email,jdbcType=VARCHAR},
		authstatus = #{authstatus,jdbcType=CHAR},
		usertype = #{usertype,jdbcType=CHAR},
		realname =
		#{realname,jdbcType=VARCHAR},
		cardnum = #{cardnum,jdbcType=VARCHAR},
		accttype = #{accttype,jdbcType=CHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select id, loginacct,
		userpswd, username, email, authstatus, usertype,
		realname,
		cardnum,
		accttype
		from t_member
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, loginacct, userpswd,
		username, email, authstatus, usertype,
		realname,
		cardnum, accttype
		from
		t_member
	</select>

	<select id="getMemberLogin" resultMap="BaseResultMap">
		select id, loginacct,
		userpswd, username, email, authstatus, usertype,
		realname,
		cardnum,
		accttype
		from t_member
		where loginacct = #{loginacct} and userpswd =
		#{userpswd}
	</select>
	<select id="queryCount" resultType="int">
		select count(*)
		from t_member
		where loginacct = #{loginacct} and userpswd = #{userpswd}
	</select>
	<update id="updateAcctType"
		parameterType="com.atguigu.atcrowdfunding.bean.Member">
		update t_member
		set accttype = #{accttype,jdbcType=CHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateBasicinfo"
		parameterType="com.atguigu.atcrowdfunding.bean.Member">
		update t_member
		set
		realname =
		#{realname,jdbcType=VARCHAR},
		cardnum =
		#{cardnum,jdbcType=VARCHAR},
		tel
		= #{tel,jdbcType=VARCHAR}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<update id="updateEmail"
		parameterType="com.atguigu.atcrowdfunding.bean.Member">
		update t_member
		set email = #{email}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<update id="updateauthstatus"
		parameterType="com.atguigu.atcrowdfunding.bean.Member">
		update t_member
		set authstatus = #{authstatus}
		where id =
		#{id,jdbcType=INTEGER}
	</update>
	<select id="getMemberById" resultMap="BaseResultMap">
		select id, loginacct,
		userpswd, username, email, authstatus, usertype,
		realname,
		cardnum,
		accttype,
		tel
		from t_member
		where id = #{memberid,jdbcType=INTEGER}
	</select>
	<select id="queryCertByMemberid" resultType="map">
		SELECT
		t_cert.id,t_cert.name,t_member_cert.iconpath
		FROM t_cert JOIN
		t_member_cert
		ON t_cert.id=t_member_cert.certid
		WHERE
		t_member_cert.memberid= #{memberid}
	</select>
</mapper>